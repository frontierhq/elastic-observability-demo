locals {
  index_lifecycle = [
  {% for k, v in elasticsearch.index_lifecycle.items() %}
    {
      name = "{{ k }}"

      {% if v.policy.phases.hot != null %}
      hot = {
        {% if v.policy.phases.hot.min_age != null %}min_age = "{{ v.policy.phases.hot.min_age }}"{% endif %}

        {% if v.policy.phases.hot.actions.rollover %}
          rollover = {
          {% for k, v in v.policy.phases.hot.actions.rollover.items() %}
          {{ k }} = "{{ v }}"
          {% endfor %}
          }
        {% endif %}

        {% if v.policy.phases.hot.actions.set_priority %}
          set_priority = {
            "priority" = "{{ v.policy.phases.hot.actions.set_priority.priority }}"
          }
        {% endif %}
      }
      {% endif %}

      {% if v.policy.phases.warm != null %}
      warm = {
        {% if v.policy.phases.warm.min_age != null %}min_age = "{{ v.policy.phases.warm.min_age }}"{% endif %}

        {% if v.policy.phases.warm.actions.forcemerge %}
          forcemerge = {
            "max_num_segments" = "{{ v.policy.phases.warm.actions.forcemerge.max_num_segments }}"
          }
        {% endif %}

        {% if v.policy.phases.warm.actions.set_priority %}
          set_priority = {
            "priority" = "{{ v.policy.phases.warm.actions.set_priority.priority }}"
          }
        {% endif %}
      }
      {% endif %}

      {% if v.policy.phases.cold != null %}
      cold = {
        {% if v.policy.phases.cold.min_age != null %}min_age = "{{ v.policy.phases.cold.min_age }}"{% endif %}

        {% if v.policy.phases.cold.actions.allocate %}
          allocate = {
            "number_of_replicas" = {{ v.policy.phases.cold.actions.allocate.number_of_replicas | tojson }}
          }
        {% endif %}

        {% if v.policy.phases.cold.actions.searchable_snapshot %}
          searchable_snapshot = {
            "force_merge_index" = {{ v.policy.phases.cold.actions.searchable_snapshot.force_merge_index | tojson }}
            "snapshot_repository" = "{{ v.policy.phases.cold.actions.searchable_snapshot.snapshot_repository }}"
          }
        {% endif %}

        {% if v.policy.phases.cold.actions.set_priority %}
          set_priority = {
            "priority" = "{{ v.policy.phases.cold.actions.set_priority.priority }}"
          }
        {% endif %}
      }
      {% endif %}

      {% if v.policy.phases.frozen != null %}
      frozen = {
        {% if v.policy.phases.frozen.min_age != null %}min_age = "{{ v.policy.phases.frozen.min_age }}"{% endif %}

        {% if v.policy.phases.frozen.actions.searchable_snapshot %}
          searchable_snapshot = {
            "force_merge_index" = {{ v.policy.phases.frozen.actions.searchable_snapshot.force_merge_index | tojson }}
            "snapshot_repository" = "{{ v.policy.phases.frozen.actions.searchable_snapshot.snapshot_repository }}"
          }
        {% endif %}
      }
      {% endif %}

      {% if v.policy.phases.delete != null %}
      delete = {
        {% if v.policy.phases.delete.min_age != null %}min_age = "{{ v.policy.phases.delete.min_age }}"{% endif %}

        {% if v.policy.phases.delete.actions.delete %}
          delete = {
            "delete_searchable_snapshot" = {{ v.policy.phases.delete.actions.delete.delete_searchable_snapshot | tojson }}
          }
        {% endif %}
      }
      {% endif %}
    }{% if not loop.last %},{% endif %}
  {% endfor %}
  ]
}

# output "index_lifecycle" {
#   value = local.index_lifecycle
# }
